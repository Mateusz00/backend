plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.openapi.generator" version "7.0.0"
}

group = 'io.github.mateusz00'
version = '1.0'

bootJar {
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
	sourceSets {
		main {
			java.srcDirs += "build/openapi/src/main/java"
		}
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

compileJava {
	options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
	options.compilerArgs << '-Amapstruct.unmappedTargetPolicy=ERROR'
}

compileJava.dependsOn tasks.named("openApiGenerate")
tasks.named('openApiGenerate') {
	generatorName = "spring"
	inputSpec  = project.layout.projectDirectory.dir("src/main/api/api.yaml").toString()
	outputDir = "$buildDir/openapi"
	apiPackage = "io.github.mateusz00.api"
	modelPackage = "io.github.mateusz00.api.model"
	configOptions = [
			dateLibrary: "java8",
			interfaceOnly: "true",
			useSpringBoot3: "true",
			skipDefaultInterface: "true",
			useTags: "true"
	]
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.apache.commons:commons-lang3'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'com.google.guava:guava:32.1.2-jre'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
